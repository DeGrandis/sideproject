services:
  # frontend:
  #   build:
  #     context: ./frontend
  #   image: degrandis/frontend:latest
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - app-network

  # backend:
  #   build:
  #     context: ./backend
  #   image: degrandis/backend:latest
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - CORS_ORIGIN=http://sideproject.biblestudycraft.com
  #   networks:
  #     - app-network

  frontend:
    build:
      context: ./auth_frontend
    image: degrandis/auth_frontend:latest
    ports:
      - "3000:3000"
    networks:
      - client-side

  auth_backend:
    build:
      context: ./auth_backend
    image: degrandis/auth_backend:latest
    ports:
      - "8000:8000"
    environment:
      - CORS_ORIGIN=http://degrand.is,http://auth.degrand.is
    networks:
      - client-side
      - server-side
    volumes:
      - ./logs:/app/logs  # Bind mount ./logs on the host to /app/logs in the container
    logging:
      driver: json-file # Still use a logging driver if you want to view logs with docker compose logs
      options:
        max-size: 10m
        max-file: 3


  db:
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    networks:
      - server-side
    ports:
      - 5432:5432
    volumes:
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d/ # Mount your local scripts directory
      - ./postgres/data:/var/lib/postgresql/data # Bind mount to a local folder


  nginx:
    build:
      context: ./nginx
    image: degrandis/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - frontend
      - auth_backend
    networks:
      - client-side

networks:
  client-side:
    driver: bridge
  server-side: {}

