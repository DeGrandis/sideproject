# .github/workflows/deploy.yml
name: Build and Deploy to EC2

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Compose Images
        run: docker compose build --no-cache

      - name: Push Docker Images
        run: docker compose push

      - name: Create .env file
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> .env
          echo "COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN }}" >> .env
          echo "RUNNING_ENV=production" >> .env
          # Add other env vars as needed

      - name: Copy docker-compose and .env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            docker-compose.yaml
            postgres/*
          target: /home/${{ secrets.EC2_USER }}/docker

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/docker
            docker-compose down && docker-compose up --pull always -d
